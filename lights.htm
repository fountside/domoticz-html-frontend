<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<head>
<title>Home Control</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=0" /> 
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="black" />
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<meta name="description" content="" />
		<meta name="keywords" content="" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<link rel="shortcut icon" href="favicon.ico" />
		<link rel="apple-touch-icon" href="iphone-icon.png"/>
		<link rel="icon" sizes="196x196" href="logo.png">
		<link rel="icon" sizes="192x192" href="logo192.png">
		<link rel="stylesheet" media="(orientation: portrait)" href="b-portrait.css">
		<link rel="stylesheet" media="(orientation: landscape)" href="b-landscape.css">
		<link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@600&family=Oxanium&display=swap" rel="stylesheet">
		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js"></script>
	<script src="jquery.knob.min.js"></script>

<script language="JavaScript" type="text/JavaScript">
<!--

var devicestodisplay =[45];

var nod=0;
var domoticzurl="192.168.1.163";
var domoticzport="8080";
var domoticzuser = "YW50aGVh";
var domoticzpassword = "YmlhbmNh";
var hueport="http://192.168.1.73/api/newdeveloper";
var sonosport="5005";
var room="Living Room";
var newtimer=0;
var timerrunning=-1;

window.onload = function() {
    // all of your code goes in here
    // it runs after the DOM is built
	hideelement('timercontrols');	
	hideelement('lightcontrols');	
	hideelement('Lightslivingroom');
	hideelement('Lightskitchen');
	hideelement('Lightsharry');
	hideelement('Lightschester');
	hideelement('Lightsbathroom');
	hideelement('Lightsoverheads');
	hideelement('Lightsother');	
	updatetemparea("outtemp","5954");
	updatetemparea("intemp","5955");
	updatetimer();
	updateClock();
	getalldevices();
	updatealldevices();
	updateweathertext();
	updateweathericon();
	updateweatherpressure();
	updatebathroomhumidity(5955);
	updatefilter();
	}
	
window.setInterval(function(){
	updateClock();
	updatetemparea("outtemp","5954");
	updatetemparea("intemp","5955");
	updateweatherpressure();
	updatebathroomhumidity(5955);
	updatefilter();
}, 30000);

window.setInterval(function(){
	updatealldevices();
	updatetimer();
}, 10000);


///////////////////////////////////////////////////////////////////  DOMOTICZ DEVICES

function getalldevices(){
fLen = devicestodisplay.length;
for (i = 0; i < fLen; i++) {
	getdevice(devicestodisplay[i]);
	}
}

function getdevice(idx){
	console.log("getting device idx" + idx);
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idx;
	xmlhttp.onreadystatechange = function() {
		console.log(devicestodisplay[i] + "   " +xmlhttp.readyState)
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			var myArr = JSON.parse(xmlhttp.responseText);
	   		devicename = myArr.result[0].Name;
			devicestatus = myArr.result[0].Status;
	   		console.log(" ---------- GET DEVICE ----------- " + devicename + "(" + devicestatus+")");
			nod=nod+1;
			var div = document.createElement("div");
			div.className = 'devicecontainer';
			div.id = "DEVICE"+idx;
			console.log(" ---------- CREATE DIV ----------- " + div.id);
			document.getElementById("devicesdiv").appendChild(div);
			document.getElementById(div.id).innerHTML='<span class="devicename" align="center">'+devicename+'</span>';
			document.getElementById(div.id).addEventListener('click', function() {
 				{ toggle(idx); };
			}, false);
			
			}
		}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatealldevices(){
fLen = devicestodisplay.length;
for (i = 0; i < fLen; i++) {
	updatedevice(devicestodisplay[i]);
	}
}

function updatedevice(idx){
	var location="DEVICE"+idx;
	console.log("------------------------checking status to update "+location);
	var xmlhttp = new XMLHttpRequest();
	var url = "http://192.168.1.163:8080/json.htm?username=YW50aGVh&password=YmlhbmNh&type=devices&rid="+idx;
	var onoff;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			onoff = myArr.result[0].Status;
			devicename = myArr.result[0].Name;
       // myFunction(myArr);
    	}
		if (onoff == "On") {
		document.getElementById(location).className = "deviceon";
		} 
		if (onoff == "Off") {
		document.getElementById(location).className = "deviceoff";
		}
		if (onoff == "Open") {
		document.getElementById(location).className  = "deviceon";
		} 
		if (onoff == "Closed") {
		document.getElementById(location).className= "deviceoff";
		}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function MM_callJS(jsStr) { //v2.0
  return eval(jsStr)
}



///////////////////////////////////////////////////////////////////  DOMOTICZ SWITCHES


function switchon(devicecode){
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=switchlight&idx='+devicecode+'&switchcmd=On', '');
	updatealldevices();
}

function switchoff(devicecode){
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=switchlight&idx='+devicecode+'&switchcmd=Off', '');
	updatealldevices();
}

function toggle(devicecode){
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=switchlight&idx='+devicecode+'&switchcmd=Toggle', '');
	updatealldevices();
}

function dim(devicecode,dimlevel){
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=switchlight&idx='+devicecode+'&switchcmd=Set%20Level&level='+dimlevel, '');
	updatealldevices();
}

///////////////////////////////////////////////////////////////////  PHILIPS HUE CONTROL (Remove this section if not needed or keep for later expansion)


function updatehue(number){
	thishue=number;
	showelement('lightcontrols');
	var timerstatus
	var xmlhttp = new XMLHttpRequest();
	var url = hueport + "/lights/" + thishue;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			currenthue = myArr.state.hue;
			currentbri = myArr.state.bri;
			currentsat = myArr.state.sat;
			currentonoff = myArr.state.on;
			if (currentonoff==true) {
				currentstate="On"; 
				$(".huecolour").val(currenthue).trigger("change");
				$(".huebri").val(currentbri).trigger("change");
				$(".huesat").val(currentsat).trigger("change");
				} else {
				currentstate="Off";
				}
			currentname = myArr.name;
			document.getElementById("lampname").innerHTML= currentname + " (" + currentstate +")";
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}
	function huechangeall(huecode,huecolour,huebri,huesat) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":true,"hue": '+huecolour+',"bri": '+huebri+',"sat":'+huesat+'}');
	}
	function huehue(huecode,huecolour) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":true,"hue": '+huecolour+'}');
	}
	function huesat(huecode,huesat) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":true,"sat": '+huesat+'}');
	}
	function huebri(huecode,huebri) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":true,"bri": '+huebri+'}');
	}
	function huemax(huecode) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":true,"bri":255,"sat":0,"hue":50000}');
	}
	function hueoff(huecode) {
	execute('PUT',hueport + '/lights/' + huecode +'/state', '{"on":false}');
	}
	function huegroupmax(groupcode) {
	execute('PUT',hueport + '/groups/' + groupcode +'/action', '{"on":true,"bri":255,"sat":0}');
	}
	function huegroupoff(groupcode) {
	execute('PUT',hueport + '/groups/' + groupcode +'/action', '{"on":false}');
	}
	function huegroupup(groupcode) {
	execute('PUT',hueport + '/groups/' + groupcode +'/action', '{"bri_inc":40}');
	}
	function huegroupdown(groupcode) {
	execute('PUT',hueport + '/groups/' + groupcode +'/action', '{"bri_inc":-40}');
	}
	function scene(scenecode){
	execute('PUT', hueport + '/groups/0/action', '{"scene":"'+scenecode+'"}');
	}
	

///////////////////////////////////////////////////////////////////  SONOS CONTROL USING https://github.com/jishi/node-sonos-http-api (Remove this section if not needed or keep for later expansion)


function changeroom (roomname) {
	room = roomname;
}

function changeroomharry () {
	room = "Harry's Room";
}

function changeroomchester () {
	room = "Chester's Room";
}

function sonos(command){
	console.log("Sending Sonos Command "+command)
	var xmlhttp = new XMLHttpRequest();
	var url = "http://"+domoticzurl+":"+sonosport+"/"+ room +"/"+command;
	xmlhttp.onreadystatechange = function() {
    	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
ticker=0;
}

function sonosroom(roomname,command){
	console.log("Sending Sonos Command "+command)
	var xmlhttp = new XMLHttpRequest();
	var url = "http://"+domoticzurl+":"+sonosport+"/"+ roomname +"/"+command;
	xmlhttp.onreadystatechange = function() {
    	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
ticker=0;
}

function makeallvolumes(volnum){
	sonosroom("Living Room","volume/"+volnum);
	sonosroom("Kitchen","volume/"+volnum);
	sonosroom("Harry's Room","volume/"+volnum);
	sonosroom("Chester's Room","volume/"+volnum);
}

function pauseall(){
	sonosroom("Living Room","pause");
	sonosroom("Kitchen","pause");
	sonosroom("Harry's Room","pause");
	sonosroom("Chester's Room","pause");
	sonosroom("Bathroom","pause");
}

function ungroupall(){
	leave("Living Room");
	leave("Kitchen");
	leave("Harry's Room");
	leave("Bathroom");
	leave("Chester's Room");
	sonos("play");
}

function updatesonos(room){
	console.log("checking url of album art for "+room);
	var xmlhttp = new XMLHttpRequest();
	var url = "http://"+domoticzurl+":"+sonosport+"/"+room+"/state";
	console.log(url);
	var art;
	var track;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			art = myArr.currentTrack.absoluteAlbumArtUri;
			track = myArr.currentTrack.title;
			duration = myArr.currentTrack.duration;
			if (track==undefined) {
				track = "TV Sound";
				art = "assets/pictures/sonos.jpg";
				}
		    var longtrack = track;
			if (track.substring(0, 7) == "x-sonos" || track == "Streaming from http://radiomonitor.com"){
				track = "Radio Stream"
				}
			playingstring = myArr.playbackState;
			playing = playingstring.toLowerCase();
			elapsed = myArr.elapsedTimeFormatted;
       // myFunction(myArr);
	   document.getElementById("Trackname").innerHTML=track;
	   document.getElementById("Trackstatus").innerHTML=playing + ' ' + elapsed;
	   document.getElementById("Roomname").innerHTML = room
	   if (longtrack != previoustrack) {
	    console.log(art)
		document.getElementById("Albumart").style.backgroundImage=("url("+art+")");
		document.getElementById("Albumart").style.backgroundSize="100% 100%";	
		previoustrack = track
		}
	}}
	
xmlhttp.open("GET", url, true);
xmlhttp.send();
}	


function joinwith(roomname){
	var xmlhttp = new XMLHttpRequest();
	var url = "http://"+domoticzurl+":"+sonosport+"/"+ roomname +"/join/"+room;
	xmlhttp.onreadystatechange = function() {
    	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function leave(roomname){
	var xmlhttp = new XMLHttpRequest();
	var url = "http://"+domoticzurl+":"+sonosport+"/"+ roomname +"/leave";
	xmlhttp.onreadystatechange = function() {
    	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function transferto(roomname){
joinwith(roomname);
leave(room);
}


///////////////////////////////////////////////////////////////////  CLOCK AND TIMER (Remove this section if not needed or keep for later expansion)


function updateClock() {
    var now = new Date(), // current date
		timetext = checkTime(now.getHours()) + ':' + checkTime(now.getMinutes()); 
    document.getElementById("clocktext").innerHTML = timetext;
}

function checkTime(i) {
    if (i<10) {i = "0" + i};  // add zero in front of numbers < 10
    return i;
}

function execute($method,$url,$message){
xmlhttp=new XMLHttpRequest();
xmlhttp.open($method,$url,true)
xmlhttp.send($message);
}

function toggletimerpanel() {
    if (document.getElementById('timerpopup').style.display == 'none') {
		document.getElementById('timerpopup').style.display = 'block' } else {
		document.getElementById('timerpopup').style.display = 'none'}
}

function hidetimerpanel() {
		document.getElementById('timerpopup').style.display = 'none'
}

function starttimer(minutes) {
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=updateuservariable&idx=14&vname=Timer&vtype=Integer&vvalue=' + minutes, '');
	switchon(666);
	speak("Timer set for " + minutes + "minutes and is now running.");
	timerrunning=1;
}

function updatetimer(){
	showorhidetimer();
	var timerstatus
	var xmlhttp = new XMLHttpRequest();
	var url = "http://192.168.1.163:8080/json.htm?username=YW50aGVh&password=YmlhbmNh&type=command&param=getuservariable&idx=14";
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			if (timerrunning == 1) {
			document.getElementById("timerstatus").innerHTML = outstatus + 'm';
			//document.getElementById('timerstatus').className = 'timerrunningmenu';
			showelement("timerstatus");
			console.log("TIMER RUNNING---------------");
			} else {
			//document.getElementById("timerstatus").innerHTML = 'Timer not running';
			hideelement("timerstatus");
			console.log("TIMER NOT RUNNING---------------");
			//document.getElementById('timerarea').className = 'timermenu';
			}
			if (outstatus >= 10) { document.getElementById("timerstatus").style.backgroundColor = 'gray'; }
			if (outstatus < 10 && outstatus > 5) { document.getElementById("timerstatus").style.backgroundColor = 'orange'; }
			if (outstatus < 6) { document.getElementById("timerstatus").style.backgroundColor = 'red'; }
			
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function showorhidetimer(){
	var timerstatus
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid=666';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Status;
			if (outstatus == 'On') {
				timerrunning=1;
			} 
			if (outstatus == 'Off') {
				if (timerrunning == 1) {
				document.getElementById("scene").play;
				speak("Timer has elapsed."); 
				}
				timerrunning=0;
			}
		}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function timercancel(){
	execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=updateuservariable&idx=14&vname=Timer&vtype=Integer&vvalue=0', '');
	switchoff(666);
	timerrunning=0;
	speak("Timer cancelled.");
}

///////////////////////////////////////////////////////////////////  TEMPERATURE SENSORS (Remove this section if not needed or keep for later expansion)

function updatetemparea(divname,idxcode){
	var instatus
	var outstatus
	var weatherstatus
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid=' + idxcode;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			temptext =  myArr.result[0].Temp;
			humtext = myArr.result[0].Humidity;
			console.log(outstatus)
			document.getElementById(divname).innerHTML = temptext + "C  " + humtext + "%"
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function getalltempsensors(){
fLen = tempsensorstodisplay.length;
for (i = 0; i < fLen; i++) {
	preparetempsensordiv(tempsensorstodisplay[i]);
	gettempsensor(tempsensorstodisplay[i]);
	}
}

function gettempsensor(idx){
	console.log("getting device idx" + idx);
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idx;
	xmlhttp.onreadystatechange = function() {
		console.log(tempsensorstodisplay[i] + "   " +xmlhttp.readyState)
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			var myArr = JSON.parse(xmlhttp.responseText);
	   		devicename = myArr.result[0].Name;
			devicestatus = myArr.result[0].Data;
	   		console.log(devicename + "(" + devicestatus+")");
			//addtempsensor(idx,devicename,devicestatus);
			}
		}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function preparetempsensordiv(deviceidx){
nod=nod+1;
var div = document.createElement("div");
div.className = 'sensorcontainer';
div.id = "DEVICE"+deviceidx;
document.getElementById("tempsensorsdiv").appendChild(div);
}

function updatealltempsensors(){
fLen = tempsensorstodisplay.length;
for (i = 0; i < fLen; i++) {
	updatetempsensor(tempsensorstodisplay[i]);
	}
}

function updatetempsensor(idx){
	var location="DEVICE"+idx;
	console.log("checking status of idx "+idx);
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idx;
	var onoff;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			onoff = myArr.result[0].Data;
			devicename = myArr.result[0].Name;
			lastupdate = myArr.result[0].LastUpdate;
			document.getElementById(location).innerHTML='<span class="sensorname">'+devicename+'</span><span class="sensorstate">'+onoff+'</span>  <span class="sensordatetime">'+lastupdate+'<span>';
			}
		if (onoff == "On") {
			document.getElementById(location).style.background  = "#E67F7F";
		} 
		if (onoff == "Off") {
			document.getElementById(location).style.background = "none";
		}
		if (onoff == "Open") {
			document.getElementById(location).style.background  = "#E67F7F";
		} 
		if (onoff == "Closed") {
			document.getElementById(location).style.background = "none";
		}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}


///////////////////////////////////////////////////////////////////  SECURITY SENSORS (Remove this section if not needed or keep for later expansion)

function getallsensors(){
fLen = sensorstodisplay.length;
for (i = 0; i < fLen; i++) {
	preparesensordiv(sensorstodisplay[i]);
	getsensor(sensorstodisplay[i]);
	}
}

function getsensor(idx){
	console.log("getting device idx" + idx);
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idx;
	xmlhttp.onreadystatechange = function() {
		console.log(sensorstodisplay[i] + "   " +xmlhttp.readyState)
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			var myArr = JSON.parse(xmlhttp.responseText);
	   		devicename = myArr.result[0].Name;
			devicestatus = myArr.result[0].Data;
	   		console.log(devicename + "(" + devicestatus+")");
			addsensor(idx,devicename,devicestatus);
			}
		}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function preparesensordiv(deviceidx){
nod=nod+1;
var div = document.createElement("div");
div.className = 'sensorcontainer';
div.id = "DEVICE"+deviceidx;
document.getElementById("sensorsdiv").appendChild(div);
}

function updateallsensors(){
fLen = sensorstodisplay.length;
for (i = 0; i < fLen; i++) {
	updatesensor(sensorstodisplay[i]);
	}
}

function updatesensor(idx){
	var location="DEVICE"+idx;
	console.log("checking status of idx "+idx);
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idx;
	var onoff;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			onoff = myArr.result[0].Status;
			devicename = myArr.result[0].Name;
			lastupdate = myArr.result[0].LastUpdate;
       // myFunction(myArr);
	   	document.getElementById(location).innerHTML='<span class="sensorname">'+devicename+'</span><span class="sensorstate">'+onoff+'</span>  <span class="sensordatetime">'+lastupdate+'<span>';
    	}
		if (onoff == "On") {
		document.getElementById(location).style.background  = "#E67F7F";
		} 
		if (onoff == "Off") {
		document.getElementById(location).style.background = "none";
		}
		if (onoff == "Open") {
		document.getElementById(location).style.background  = "#E67F7F";
		} 
		if (onoff == "Closed") {
		document.getElementById(location).style.background = "none";
		}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}




function addsensor(deviceidx,devicenametext,devicestatus){
nos=nos+1;
var div = document.createElement("div");
//div.style.width = "100px";
//div.style.height = "100px";
//div.style.background = "red";
//div.style.color = "white";
div.className = 'sensorcontainer';
div.innerHTML = devicenametext;
div.id = "DEVICE"+deviceidx;

console.log("-------------"+div.id);
//document.getElementById("devicesdiv").appendChild(div);
document.getElementById(div.id).addEventListener('click', function() {
 { toggle(deviceidx); };
}, false);
}



///////////////////////////////////////////////////////////////////  CHANGING TEXT AND PICTURES BASED ON CONTENTS OF DOMOTICZ VARIABLES OR SWITCHES (Remove this section if not needed or keep for later expansion)

function updateweathertext(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=23';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("weathertext").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatefilter(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=39';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			filterhours = myArr.result[0].Value;
			if (filterhours < 25) { showelement("cleanfilter"); } else { hideelement("cleanfilter"); }
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updateweatherpressure(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=36';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("pressuretext").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatebathroomhumidity(idxcode){
	var instatus
	var outstatus
	var weatherstatus
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=devices&rid='+idxcode;
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			temptext =  myArr.result[0].Temp;
			humtext = myArr.result[0].Humidity;
			console.log("BATHROOM HUMIDITY = " + humtext)
			if (humtext > 55) { showelement("bathroomhigh"); } else { hideelement("bathroomhigh"); }
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updateweathericon(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=26';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			
			document.getElementById("weathericon").src = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatedayhigh(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=40';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("dayhigh").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatedaylow(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=41';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("daylow").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatenighthigh(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=42';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("nighthigh").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

function updatenightlow(){
	var xmlhttp = new XMLHttpRequest();
	var url = 'http://'+domoticzurl+':'+domoticzport+'/json.htm?username='+ domoticzuser + '&password=' + domoticzpassword + '&type=command&param=getuservariable&idx=43';
	xmlhttp.onreadystatechange = function() {
    	if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
        	var myArr = JSON.parse(xmlhttp.responseText);
			outstatus = myArr.result[0].Value;
			document.getElementById("nightlow").innerHTML = outstatus
    	}
	}
xmlhttp.open("GET", url, true);
xmlhttp.send();
}

///////////////////////////////////////////////////////////////////  SHOWING AND HIDING AREAS OF THE SCREEN

function toggleelement(nameofelement) {
    if (document.getElementById(nameofelement).style.display == 'none') {
		document.getElementById(nameofelement).style.display = 'block' } else {
		document.getElementById(nameofelement).style.display = 'none'}
}

function hideelement(nameofelement) {
		document.getElementById(nameofelement).style.display = 'none';
}

function showelement(nameofelement) {
		document.getElementById(nameofelement).style.display = 'block';
}

///////////////////////////////////////////////////////////////////  NANOLEAF CONTROL: FOLLOW INSTRUCTIONS AT https://www.youtube.com/watch?v=PyccDEzfIUI

function nanochangescene(scenename){
console.log(scenename);
execute('PUT', 'http://' + domoticzurl + ':' + domoticzport + '/json.htm?username=' + domoticzuser + '&password=' + domoticzpassword + '&type=command&param=updateuservariable&idx=20&vname=NanoleafScene&vtype=2&vvalue=' + scenename, '');
switchon(4852);
}

///////////////////////////////////////////////////////////////////  NIGHT MODE: ACTIVATE SWITCH AND MOVE TO night.htm PAGE

function nightmode(){
switchon(37);
window.location.href = 'night.htm';	
}

///////////////////////////////////////////////////////////////////  MISC FUNCTIONS

function speak(textToSpeak) {
   var newUtterance = new SpeechSynthesisUtterance();
   newUtterance.text = textToSpeak;
   window.speechSynthesis.speak(newUtterance);
}


$(function($) {

	$(".knob").knob({
		change : function (value) {
			//console.log("change : " + value);
		},
		release : function (value) {
			//console.log(this.$.attr('value'));
			console.log("release : " + value);
		},
		cancel : function () {
			console.log("cancel : ", this);
		},
		/*format : function (value) {
		 return value + '%';
		 },*/
		draw : function () {

			// "tron" case
			if(this.$.data('skin') == 'tron') {

				this.cursorExt = 0.3;

				var a = this.arc(this.cv)  // Arc
						, pa                   // Previous arc
						, r = 1;

				this.g.lineWidth = this.lineWidth;

				if (this.o.displayPrevious) {
					pa = this.arc(this.v);
					this.g.beginPath();
					this.g.strokeStyle = this.pColor;
					this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, pa.s, pa.e, pa.d);
					this.g.stroke();
				}

				this.g.beginPath();
				this.g.strokeStyle = r ? this.o.fgColor : this.fgColor ;
				this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a.s, a.e, a.d);
				this.g.stroke();

				this.g.lineWidth = 2;
				this.g.beginPath();
				this.g.strokeStyle = this.o.fgColor;
				this.g.arc( this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false);
				this.g.stroke();

				return false;
			}
		}
	});

	// Example of infinite knob, iPod click wheel
	$("input.timerroundel").knob(
		   {
				min : 0
				, max : 120
				, stopper : false
				, change : function (value) {
				console.log('Changed to '+Math.floor(value));
				newtimer=Math.floor(value);
				}
			});
				$("input.huesat").knob(
		   {
				min : 0
				, max : 254
				, stopper : false
				, change : function (value) {
				console.log('Changed to '+Math.floor(value));
				currentsat=Math.floor(value);
				huesat(thishue,currentsat); }
			});
			
		$("input.huecolour").knob(
		   {
				min : 0
				, max : 65000
				, stopper : false
				, change : function (value) {
				console.log('Changed to '+Math.floor(value));
				currenthue=Math.floor(value);
				huehue(thishue,currenthue); }
			});
		$("input.huebri").knob(
		   {
				min : 0
				, max : 254
				, stopper : false
				, change : function (value) {
				console.log('Changed to '+Math.floor(value));
				currentbri=Math.floor(value);
				huebri(thishue,currentbri); }
			});		
	 
});	

    </script>


<body>
	<div class="background" id="wallpaper"><img src="assets/backgrounds/city.jpg" width="100%" height="100%"></div>
	<audio id="scene" src="assets/sounds/beep2.mp3" preload="auto"></audio>

	<div id="rightbar" class="scenearea" align="center">
		<div id="clocktext" class="clockarea" align="center">
		22:03
		</div>
	<div id="timerstatus" class="timerarea" align="center">
	26m
	</div>
	<a href="climate.htm"><div class="rightinfoitem" align="center"><img src="assets/icons/indoors.png"><span class="normaltext" id="intemp">--</span><br><img src="assets/icons/outdoors.png"><span class="normaltext" id="outtemp">--</span><br><img src="assets/icons/pressure.png"><span class="normaltext" id="pressuretext">--</span></div></a>
	<a href="climate.htm"><div class="rightweatheritem" align="center"><img id="weathericon" src="" style="filter:grayscale(100%);"height="40px"><span id="weathertext">--</span></div></a>
	<a href="climate.htm"><div class="rightweatheritem" align="center"><img id="bathroomhigh" src="assets/icons/bathroom-high.png" width="100%"></div></a>
	<a href="climate.htm"><div class="rightweatheritem" align="center"><img id="cleanfilter" src="assets/icons/clean-filter.png" width="100%"></div></a>
		<div id="devicesdiv" align="center">
		</div>
	</div>
	
	<div id="navigationarea" class="navigationstrip">
		<a href="index.htm"><div id="1" class="iconblock" align="center"><img src="assets/icons/home (1).png" height="70%"></div></a>
		<a href="lights.htm"><div id="1" class="iconblock" align="center"><img src="assets/icons/bulb.png" height="70%"></div></a>
		<a href="power.htm"><div id="2" class="iconblock" align="center"><img src="assets/icons/socket.png" height="70%"></div></a>
		<a href="climate.htm"><div id="3" class="iconblock" align="center"><img src="assets/icons/house (3).png" height="70%"></div></a>
		<a href="security.htm"><div id="4" class="iconblock" align="center"><img src="assets/icons/door.png" height="70%"></div></a>
		<a href="audio.htm"><div id="5" class="iconblock" align="center"><img src="assets/icons/speaker.png" height="70%"></div></a>
		<a href="javascript:;" onClick="toggleelement('timercontrols')"><div id="6" class="iconblock" align="center"><img src="assets/icons/smartwatch.png" height="70%"></div></a>
		<a href="more.htm"><div id="7" class="iconblock" align="center"><img src="assets/icons/nav-other.png" height="70%"></div></a>
	</div>
		
	<div id="largestarea" class="mainarea">
	<div id="clock" class="navigationitemdoublewidth">
		<span class="sectiontitle">Living room<br>
			<a href="javascript:;" onClick="huegroupmax(27);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(27);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(27);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(27);"><span class="minikey">Down</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(45);scene('5ZNGAVy0Zra2QK8');nanochangescene('TV');"><span class="minikey">TV</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(45);scene('GTULVltgAPVep0t');switchoff(4848);"><span class="minikey">Bright</span></a>
			<a href="javascript:;" onClick="toggleelement('Lightslivingroom');"><img width="30vw" src="assets/icons/audio-voldn.png"></a>
			</span>
		<br>
		<div id="Lightslivingroom">
		<a href="javascript:;" onClick="updatehue(3);"><span id="h1" class="textbutton" align="center">Floor 1</span></a>
		<a href="javascript:;" onClick="updatehue(47);"><span id="h1" class="textbutton" align="center">Floor 2</span></a>
		<a href="javascript:;" onClick="updatehue(17);"><span id="h1" class="textbutton" align="center">Table</span></a>
		<a href="javascript:;" onClick="updatehue(30);"><span id="h1" class="textbutton" align="center">Podium</span></a>
		<a href="javascript:;" onClick="updatehue(29);"><span id="h1" class="textbutton" align="center">Window Strip</span></a>
		<a href="javascript:;" onClick="updatehue(43);"><span id="h1" class="textbutton" align="center">Bookcase</span></a>
		<a href="javascript:;" onClick="updatehue(19);"><span id="h1" class="textbutton" align="center">Entrance</span></a>	
		<a href="javascript:;" onClick="updatehue(26);"><span id="h1" class="textbutton" align="center">Back Wall</span></a>
		<a href="javascript:;" onClick="updatehue(44);"><span id="h1" class="textbutton" align="center">TV Top L</span></a>
		<a href="javascript:;" onClick="updatehue(38);"><span id="h1" class="textbutton" align="center">TV Bot L</span></a>
		<a href="javascript:;" onClick="updatehue(36);"><span id="h1" class="textbutton" align="center">TV Bot R</span></a>
		<a href="javascript:;" onClick="updatehue(45);"><span id="h1" class="textbutton" align="center">TV Top R</span></a>
		<span class="sectiontitle">Front Balcony Coloured LEDs<br>
			<a href="javascript:;" onClick="document.getElementById('scene').play();switchon(4574);"><span class="minikey">On</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(4574);"><span class="minikey">Off</span></a>
		</span>
		</div>
		
		<span class="sectiontitle">Kitchen<br>
		<a href="javascript:;" onClick="huegroupmax(28);dim(46,100);"><span class="minikey">Max</span></a>
		<a href="javascript:;" onClick="huegroupoff(28);switchoff(46);"><span class="minikey">Off</span></a>
		<a href="javascript:;" onClick="huegroupup(28);"><span class="minikey">Up</span></a>
		<a href="javascript:;" onClick="huegroupdown(28);"><span class="minikey">Down</span></a>
		<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(45);scene('XC2Lz2cImy7vDAb');"><span class="minikey">TV</span></a>
		<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(45);scene('Cx86AwMLkRBjGR0');"><span class="minikey">Space</span></a>
		<a href="javascript:;" onClick="toggleelement('Lightskitchen');"><img width="30vw" src="assets/icons/audio-voldn.png"></a><br></span>

		
		<div id="Lightskitchen">
			<a href="javascript:;" onClick="updatehue(20);"><span id="h1" class="textbutton" align="center">Floor</span></a>
			<a href="javascript:;" onClick="updatehue(24);"><span id="h1" class="textbutton" align="center">Sink</span></a>
			<a href="javascript:;" onClick="updatehue(39);"><span id="h1" class="textbutton" align="center">Coffee Bar</span></a><br>
			<a href="javascript:;" onClick="document.getElementById('scene').play();dim(46,32);"><span class="textbutton">100%</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();dim(46,24);"><span class="textbutton">80%</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();dim(46,16);"><span class="textbutton">50%</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();switchoff(46);"><span class="offtextbutton">Off</span></a>
		</div>
			
		<span class="sectiontitle">Overheads<br>
			<a href="javascript:;" onClick="huegroupmax(11);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(11);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(11);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(11);"><span class="minikey">Down</span></a>
			<a href="javascript:;" onClick="toggleelement('Lightsoverheads');"><img width="30vw" src="assets/icons/audio-voldn.png"></a></span>
		
		<div id="Lightsoverheads">
			<a href="javascript:;" onClick="updatehue(27);"><span id="h1" class="textbutton" align="center">Over Sofa</span></a>
			<a href="javascript:;" onClick="updatehue(35);"><span id="h1" class="textbutton" align="center">Over Table</span></a>			
		</div>
		
		<span class="sectiontitle">Harry's Room<br>
			<a href="javascript:;" onClick="huegroupmax(29);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(29);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(29);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(29);"><span class="minikey">Down</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('iduoHmEI42VwX5W');"><span class="minikey">1</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('Tbv1E56mOquuJp9');"><span class="minikey">2</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('grzNhACfQOdipik');"><span class="minikey">3</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('LMpvOyVr1BLTTH3');"><span class="minikey">4</span></a>
			<a href="javascript:;" onClick="toggleelement('Lightsharry');"><img width="30vw" src="assets/icons/audio-voldn.png"></a></span>			
			
		<div id="Lightsharry">
			<a href="javascript:;" onClick="updatehue(33);"><span id="h1" class="textbutton" align="center">Ceiling</span></a>
			<a href="javascript:;" onClick="updatehue(34);"><span id="h1" class="textbutton" align="center">Desk</span></a>
			<a href="javascript:;" onClick="updatehue(23);"><span id="h1" class="textbutton" align="center">Over Bed</span></a>
			<a href="javascript:;" onClick="updatehue(25);"><span id="h1" class="textbutton" align="center">Storage</span></a>
			<a href="javascript:;" onClick="updatehue(46);"><span id="h1" class="textbutton" align="center">Globe</span></a>
			<a href="javascript:;" onClick="updatehue(22);"><span id="h1" class="textbutton" align="center">Iris</span></a>
		</div>
		
		<span class="sectiontitle">Chester's Room<br>
			<a href="javascript:;" onClick="huegroupmax(30);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(30);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(30);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(30);"><span class="minikey">Down</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('QbF3OfJUpcYYacS');"><span class="minikey">1</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('-Qd236DqFDuVTs0');"><span class="minikey">2</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('BJMIGaCdHU-qAl8');"><span class="minikey">3</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('4sboLazGLMURO6L');"><span class="minikey">4</span></a>
			<a href="javascript:;" onClick="toggleelement('Lightschester');"><img width="30vw" src="assets/icons/audio-voldn.png"></a></span>			
			
		<div id="Lightschester">
			<a href="javascript:;" onClick="updatehue(32);"><span id="h1" class="textbutton" align="center">Ceiling</span></a>
			<a href="javascript:;" onClick="updatehue(28);"><span id="h1" class="textbutton" align="center">Desk</span></a>
			<a href="javascript:;" onClick="updatehue(5);"><span id="h1" class="textbutton" align="center">Bed Wall</span></a>
			<a href="javascript:;" onClick="updatehue(21);"><span id="h1" class="textbutton" align="center">Window</span></a>
		</div>
		
		
		<span class="sectiontitle">Bathroom<br>
			<a href="javascript:;" onClick="huegroupmax(31);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(31);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(31);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(31);"><span class="minikey">Down</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('NXIVJCHVVjXhejW');"><span class="minikey">1</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('qGmVRldLBdljXa-');"><span class="minikey">2</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('MZYXNOxRlhjRawQ');"><span class="minikey">3</span></a>
			<a href="javascript:;" onClick="document.getElementById('scene').play();scene('d6nO5akfQGSGxLK');"><span class="minikey">4</span></a>
			<a href="javascript:;" onClick="toggleelement('Lightsbathroom');"><img width="30vw" src="assets/icons/audio-voldn.png"></a></span>		
			
		<div id="Lightsbathroom">
			<a href="javascript:;" onClick="updatehue(49);"><span id="h1" class="textbutton" align="center">Shower</span></a>
			<a href="javascript:;" onClick="updatehue(48);"><span id="h1" class="textbutton" align="center">Alcove</span></a>
			<a href="javascript:;" onClick="updatehue(11);"><span id="h1" class="textbutton" align="center">Door</span></a>
			<a href="javascript:;" onClick="updatehue(12);"><span id="h1" class="textbutton" align="center">Walkway</span></a>
			<a href="javascript:;" onClick="updatehue(13);"><span id="h1" class="textbutton" align="center">Window</span></a>
			<a href="javascript:;" onClick="updatehue(9);"><span id="h1" class="textbutton" align="center">Sink</span></a>
			<a href="javascript:;" onClick="updatehue(10);"><span id="h1" class="textbutton" align="center">Toilet</span></a>
		</div>
		
		<span class="sectiontitle">
			Other rooms<a href="javascript:;" onClick="toggleelement('Lightsother');"><img width="30vw" src="assets/icons/audio-voldn.png"></a></span>
		<div id="Lightsother">
			<a href="javascript:;" onClick="updatehue(19);"><span id="h1" class="textbutton" align="center">Front Door</span></a>
			<a href="javascript:;" onClick="updatehue(7);"><span id="h1" class="textbutton" align="center">Hallway</span></a>		
			<a href="javascript:;" onClick="updatehue(40);"><span id="h1" class="textbutton" align="center">Balcony</span></a>
		</div>
		
		<span class="sectiontitle">All rooms<br>
			<a href="javascript:;" onClick="huegroupmax(0);"><span class="minikey">Max</span></a>
			<a href="javascript:;" onClick="huegroupoff(0);"><span class="minikey">Off</span></a>
			<a href="javascript:;" onClick="huegroupup(0);"><span class="minikey">Up</span></a>
			<a href="javascript:;" onClick="huegroupdown(0);"><span class="minikey">Down</span></a></span>

	</div>
		<div id="timercontrols" class="popuparea" align="center">
			<div class="popuptitle" id="timertitle">Timer</div>
			<a href="javascript:;" onClick="starttimer(44);hideelement('timercontrols');"><span class="textbuttoninpopup">44m</span></a>
			<a href="javascript:;" onClick="starttimer(60);hideelement('timercontrols');"><span class="textbuttoninpopup">60m</span></a>
			<a href="javascript:;" onClick="starttimer(16);hideelement('timercontrols');"><span class="textbuttoninpopup">16m</span></a>
			<a href="javascript:;" onClick="starttimer(14);hideelement('timercontrols');"><span class="textbuttoninpopup">14m</span></a>
			<a href="javascript:;" onClick="starttimer(120);hideelement('timercontrols');"><span class="textbuttoninpopup">2h</span></a>
			<a href="javascript:;" onClick="starttimer(90);hideelement('timercontrols');"><span class="textbuttoninpopup">1h30m</span></a>			
			<a href="javascript:;" onClick="starttimer(60);hideelement('timercontrols');"><span class="textbuttoninpopup">1h</span></a>				
			<a href="javascript:;" onClick="starttimer(55);hideelement('timercontrols');"><span class="textbuttoninpopup">55m</span></a>	
			<a href="javascript:;" onClick="starttimer(50);hideelement('timercontrols');"><span class="textbuttoninpopup">50m</span></a>	
			<a href="javascript:;" onClick="starttimer(45);hideelement('timercontrols');"><span class="textbuttoninpopup">45h</span></a>				
			<a href="javascript:;" onClick="starttimer(40);hideelement('timercontrols');"><span class="textbuttoninpopup">40m</span></a>	
			<a href="javascript:;" onClick="starttimer(35);hideelement('timercontrols');"><span class="textbuttoninpopup">35m</span></a>	
			<a href="javascript:;" onClick="starttimer(30);hideelement('timercontrols');"><span class="textbuttoninpopup">30m</span></a>				
			<a href="javascript:;" onClick="starttimer(25);hideelement('timercontrols');"><span class="textbuttoninpopup">25m</span></a>	
			<a href="javascript:;" onClick="starttimer(20);hideelement('timercontrols');"><span class="textbuttoninpopup">20m</span></a>	
			<a href="javascript:;" onClick="starttimer(15);hideelement('timercontrols');"><span class="textbuttoninpopup">15m</span></a>				
			<a href="javascript:;" onClick="starttimer(10);hideelement('timercontrols');"><span class="textbuttoninpopup">10m</span></a>	
			<a href="javascript:;" onClick="starttimer(5);hideelement('timercontrols');"><span class="textbuttoninpopup">5m</span></a>	

			<a href="javascript:;" onClick="starttimer(newtimer);hideelement('timercontrols');"><span class="textbuttoninpopup">Start</span></a>
			<a href="javascript:;" onClick="timercancel();hideelement('timercontrols');"><span class="offtextbuttoninpopup">Cancel</span></a><br>
			<a href="javascript:;" onClick="hideelement('timercontrols');"><span class="closekey">Close</span>
		</div>
		<div id="lightcontrols" class="popuparea" align="center">
			<div class="popuptitle" id="lampname">Name of light</div><br>
			<div class="roundel">Hue<br><input class="huecolour" data-width="90%" data-bgColor="#593f3f" data-fgColor="#bf7c7c" data-skin="tron" data-thickness=".4" value="0"></div>
			<div class="roundel">Brightness<br><input class="huebri" data-width="90%" data-bgColor="#593f3f" data-fgColor="#bf7c7c" data-skin="tron" data-thickness=".4" value="0"></div>
			<div class="roundel">Saturation<br><input class="huesat" data-width="90%" data-bgColor="#593f3f" data-fgColor="#bf7c7c" data-skin="tron" data-thickness=".4" value="0"></div>
			<br>
			<a href="javascript:;" onClick="huemax(thishue);updatehue(thishue);"><div class="lightkeyquad" style="background-color:#999999">Max</div></a>
			<a href="javascript:;" onClick="hueoff(thishue);updatehue(thishue);"><div class="lightkeyquad" style="background-color:#333333">Off</div></a><br>
			<a href="javascript:;" onClick="huechangeall(thishue,0,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#FF0000"></div></a>
			<a href="javascript:;" onClick="huechangeall(thishue,5890,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#CC9900"></div></a>
			<a href="javascript:;" onClick="huechangeall(thishue,8485,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#FFFF66"></div></a>
			<a href="javascript:;" onClick="huechangeall(thishue,19700,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#66FF66"></div></a>
			<a href="javascript:;" onClick="huechangeall(thishue,37100,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#00CCFF"></div></a>
			<a href="javascript:;" onClick="huechangeall(thishue,45900,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#0000CC"></div></a>		
			<a href="javascript:;" onClick="huechangeall(thishue,49500,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#CC33FF"></div></a>				
			<a href="javascript:;" onClick="huechangeall(thishue,54500,255,255);updatehue(thishue);"><div class="lightkey" style="background-color:#FF66FF"></div></a>
			<a href="javascript:;" onClick="hideelement('lightcontrols');"><span class="closekey">Close</span>
		</div>
		
		
	</div>

</body>
</html>
